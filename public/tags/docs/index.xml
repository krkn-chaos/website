<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docs on Krkn</title>
    <link>//localhost:62401/tags/docs/</link>
    <description>Recent content in Docs on Krkn</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Wed, 30 Oct 2024 16:36:06 -0400</lastBuildDate>
    <atom:link href="//localhost:62401/tags/docs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Krkn</title>
      <link>//localhost:62401/docs/installation/krkn/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>//localhost:62401/docs/installation/krkn/</guid>
      <description>Installation Git Clone the repository $ git clone https://github.com/krkn-chaos/krkn.git --branch &amp;lt;release version&amp;gt; $ cd krkn Install the dependencies $ python3.9 -m venv chaos $ source chaos/bin/activate $ pip3.9 install -r requirements.txt Note Make sure python3-devel and latest pip versions are installed on the system. The dependencies install has been tested with pip &amp;gt;= 21.1.3 versions. Where can your user find your project code? How can they install it (binaries, installable package, build from source)?</description>
    </item>
    <item>
      <title>krkn-hub</title>
      <link>//localhost:62401/docs/installation/krkn-hub/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>//localhost:62401/docs/installation/krkn-hub/</guid>
      <description>Hosts container images and wrapper for running scenarios supported by Krkn, a chaos testing tool for Kubernetes clusters to ensure it is resilient to failures. All we need to do is run the containers with the respective environment variables defined as supported by the scenarios without having to maintain and tweak files!&#xA;Set Up You can use docker or podman to run kraken-hub&#xA;Install Podman your certain operating system based on these instructions</description>
    </item>
    <item>
      <title>Installation</title>
      <link>//localhost:62401/docs/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:62401/docs/installation/</guid>
      <description>The following ways are supported to run Kraken:&#xA;Standalone python program through Git. Containerized version using either Podman or Docker as the runtime via Krkn-hub Kubernetes or OpenShift deployment ( unsupported ) Note It is recommended to run Kraken external to the cluster ( Standalone or Containerized ) hitting the Kubernetes/OpenShift API as running it internal to the cluster might be disruptive to itself and also might not report back the results if the chaos leads to clusterâ€™s API server instability.</description>
    </item>
    <item>
      <title>Testing your changes</title>
      <link>//localhost:62401/docs/contribution-guidelines/testing-changes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:62401/docs/contribution-guidelines/testing-changes/</guid>
      <description>How to Test Your Changes/Additions Install Podman/Docker Compose You can use either podman-compose or docker-compose for this step&#xA;NOTE: Podman might not work on Mac&amp;rsquo;s&#xA;pip3 install docker-compose&#xA;OR&#xA;To get latest podman-compose features we need, use this installation command&#xA;pip3 install https://github.com/containers/podman-compose/archive/devel.tar.gz&#xA;Current list of Scenario Types Scenario Types:&#xA;pod-scenarios node-scenarios zone-outages time-scenarios cerberus cluster-shutdown container-scenarios node-cpu-hog node-io-hog node-memory-hog application-outages Adding a New Scenario Create folder with scenario name</description>
    </item>
    <item>
      <title>Contributions</title>
      <link>//localhost:62401/docs/contribution-guidelines/contribute/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:62401/docs/contribution-guidelines/contribute/</guid>
      <description>How to contribute Contributions are always appreciated.&#xA;How to:&#xA;Submit Pull Request Squash Commits Pull request In order to submit a change or a PR, please fork the project and follow instructions:&#xA;$ git clone http://github.com/&amp;lt;me&amp;gt;/kraken-hub $ cd kraken-hub $ git checkout -b &amp;lt;branch_name&amp;gt; $ &amp;lt;make change&amp;gt; $ git add &amp;lt;changes&amp;gt; $ git commit -a $ &amp;lt;insert good message&amp;gt; $ git push Squash Commits If there are mutliple commits, please rebase/squash multiple commits before creating the PR by following:</description>
    </item>
    <item>
      <title>Cerberus</title>
      <link>//localhost:62401/docs/cerberus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:62401/docs/cerberus/</guid>
      <description>Cerberus Guardian of Kubernetes and OpenShift Clusters&#xA;Cerberus watches the Kubernetes/OpenShift clusters for dead nodes, system component failures/health and exposes a go or no-go signal which can be consumed by other workload generators or applications in the cluster and act accordingly.&#xA;Workflow Installation Instructions on how to setup, configure and run Cerberus can be found at Installation.&#xA;What Kubernetes/OpenShift components can Cerberus monitor? Following are the components of Kubernetes/OpenShift that Cerberus can monitor today, we will be adding more soon.</description>
    </item>
  </channel>
</rss>
