<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pod Scenarios on Krkn</title>
    <link>//localhost:62401/docs/scenarios/pod-scenario/</link>
    <description>Recent content in Pod Scenarios on Krkn</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 16 Sep 2024 09:27:31 -0400</lastBuildDate>
    <atom:link href="//localhost:62401/docs/scenarios/pod-scenario/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pod Scenarios using Krkn</title>
      <link>//localhost:62401/docs/scenarios/pod-scenario/pod-scenarios-krkn/</link>
      <pubDate>Wed, 04 Jan 2017 00:00:00 +0000</pubDate>
      <guid>//localhost:62401/docs/scenarios/pod-scenario/pod-scenarios-krkn/</guid>
      <description>Example Config The following are the components of Kubernetes for which a basic chaos scenario config exists today.&#xA;kraken: chaos_scenarios: - plugin_scenarios: - path/to/scenario.yaml You can then create the scenario file with the following contents:&#xA;# yaml-language-server: $schema=../plugin.schema.json - id: kill-pods config: namespace_pattern: ^kube-system$ label_selector: k8s-app=kube-scheduler krkn_pod_recovery_time: 120 Please adjust the schema reference to point to the schema file. This file will give you code completion and documentation for the available options in your IDE.</description>
    </item>
    <item>
      <title>Pod Scenarios using Krkn-hub</title>
      <link>//localhost:62401/docs/scenarios/pod-scenario/pod-scenarios-krkn-hub/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>//localhost:62401/docs/scenarios/pod-scenario/pod-scenarios-krkn-hub/</guid>
      <description>This scenario disrupts the pods matching the label in the specified namespace on a Kubernetes/OpenShift cluster.&#xA;Run If enabling Cerberus to monitor the cluster and pass/fail the scenario post chaos, refer docs. Make sure to start it before injecting the chaos and set CERBERUS_ENABLED environment variable for the chaos injection container to autoconnect.&#xA;$ podman run --name=&amp;lt;container_name&amp;gt; --net=host --env-host=true -v &amp;lt;path-to-kube-config&amp;gt;:/home/krkn/.kube/config:Z -d quay.io/krkn-chaos/krkn-hub:pod-scenarios $ podman logs -f &amp;lt;container_name or container_id&amp;gt; # Streams Kraken logs $ podman inspect &amp;lt;container-name or container-id&amp;gt; --format &amp;#34;{{.</description>
    </item>
  </channel>
</rss>
