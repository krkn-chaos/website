<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PVC Scenario on Krkn</title>
    <link>//localhost:64853/docs/scenarios/pvc-scenario/</link>
    <description>Recent content in PVC Scenario on Krkn</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 16 Sep 2024 09:27:31 -0400</lastBuildDate>
    <atom:link href="//localhost:64853/docs/scenarios/pvc-scenario/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PVC Scenario using Krkn</title>
      <link>//localhost:64853/docs/scenarios/pvc-scenario/pvc-scenario-krkn/</link>
      <pubDate>Wed, 04 Jan 2017 00:00:00 +0000</pubDate>
      <guid>//localhost:64853/docs/scenarios/pvc-scenario/pvc-scenario-krkn/</guid>
      <description>Sample scenario config pvc_scenario: pvc_name: &amp;lt;pvc_name&amp;gt; # Name of the target PVC. pod_name: &amp;lt;pod_name&amp;gt; # Name of the pod where the PVC is mounted. It will be ignored if the pvc_name is defined. namespace: &amp;lt;namespace_name&amp;gt; # Namespace where the PVC is. fill_percentage: 50 # Target percentage to fill up the cluster. Value must be higher than current percentage. Valid values are between 0 and 99. duration: 60 # Duration in seconds for the fault.</description>
    </item>
    <item>
      <title>PVC Scenario using Krkn-Hub</title>
      <link>//localhost:64853/docs/scenarios/pvc-scenario/pvc-scenario-krkn-hub/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>//localhost:64853/docs/scenarios/pvc-scenario/pvc-scenario-krkn-hub/</guid>
      <description>This scenario fills up a given PersistenVolumeClaim by creating a temp file on the PVC from a pod associated with it. The purpose of this scenario is to fill up a volume to understand faults cause by the application using this volume. For more information refer the following documentation.&#xA;Run If enabling Cerberus to monitor the cluster and pass/fail the scenario post chaos, refer docs. Make sure to start it before injecting the chaos and set CERBERUS_ENABLED environment variable for the chaos injection container to autoconnect.</description>
    </item>
  </channel>
</rss>
