<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IO Hog Scenario on Krkn</title>
    <link>//localhost:64001/docs/scenarios/io-hog-scenario/</link>
    <description>Recent content in IO Hog Scenario on Krkn</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 05 Jan 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="//localhost:64001/docs/scenarios/io-hog-scenario/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>IO Hog Scenarios using Krkn</title>
      <link>//localhost:64001/docs/scenarios/io-hog-scenario/io-hog-scenario-krkn/</link>
      <pubDate>Wed, 04 Jan 2017 00:00:00 +0000</pubDate>
      <guid>//localhost:64001/docs/scenarios/io-hog-scenario/io-hog-scenario-krkn/</guid>
      <description>To enable this plugin add the pointer to the scenario input file scenarios/arcaflow/io-hog/input.yaml as described in the Usage section. This scenario takes a list of objects named input_list with the following properties:&#xA;kubeconfig : string the kubeconfig needed by the deployer to deploy the sysbench plugin in the target cluster namespace : string the namespace where the scenario container will be deployed Note: this parameter will be automatically filled by kraken if the kubeconfig_path property is correctly set node_selector : key-value map the node label that will be used as nodeSelector by the pod to target a specific cluster node duration : string stop stress test after N seconds.</description>
    </item>
    <item>
      <title>IO Hog Scenario using Krkn-Hub</title>
      <link>//localhost:64001/docs/scenarios/io-hog-scenario/io-hog-scenario-krkn-hub/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>//localhost:64001/docs/scenarios/io-hog-scenario/io-hog-scenario-krkn-hub/</guid>
      <description>This scenario hogs the IO on the specified node on a Kubernetes/OpenShift cluster for a specified duration. For more information refer the following documentation.&#xA;Run If enabling Cerberus to monitor the cluster and pass/fail the scenario post chaos, refer docs. Make sure to start it before injecting the chaos and set CERBERUS_ENABLED environment variable for the chaos injection container to autoconnect.&#xA;$ podman run --name=&amp;lt;container_name&amp;gt; --net=host --env-host=true -v &amp;lt;path-to-kube-config&amp;gt;:/root/.kube/config:Z -d quay.</description>
    </item>
  </channel>
</rss>
